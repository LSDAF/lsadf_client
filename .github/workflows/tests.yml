name: Run tests

run-name: ${{ github.head_ref || github.ref_name }}-run-tests

on:
    pull_request:
        paths-ignore:
            - '**.yml'
            - '**.md'
    workflow_dispatch:


concurrency:
    group: run-tests-${{ github.event.number }}
    cancel-in-progress: true


jobs:
    unit-test:
        name: "Run Unit Tests"
        runs-on: 'ubuntu-22.04'
        timeout-minutes: 10 # The overall timeout
        permissions:
            actions: write
            checks: write
            contents: write
            pull-requests: write
            statuses: write

        steps:
            # checkout your repository
            -   uses: actions/checkout@v4
                with:
                    lfs: true

            # run tests by using the gdUnit4-action with Godot version 4.2.1 and the latest GdUnit4 release
            -   uses: MikeSchulze/gdUnit4-action@v1.1.1
                with:
                    godot-version: '4.3'
                    paths: |
                        res://tests/
                    timeout: 5
                    report-name: tests_report.xml



            # download the artifact
            -   name: Download test report artifact
                uses: actions/download-artifact@v4
                with:
                    name: artifact_tests_report.xml
                    path: ./reports

                # deploy to GitHub Pages
            -   name: Deploy to GitHub Pages
                run: |
                    git config --global user.name 'github-actions'
                    git config --global user.email 'github-actions@github.com'
                    git checkout -b gh-pages
                    mv ./reports/report_1/ ./reports/report_$GITHUB_SHA/
                    git add ./reports
                    git commit -m 'Deploy test report to GitHub Pages'
                    git push --force --set-upstream origin gh-pages

            # comment the link of the test report
            -   name: Comment the link of the test report
                uses: actions/github-script@v5
                with:
                    github-token: ${{ secrets.GITHUB_TOKEN }}
                    script: |
                        // const { context, github } = require('@actions/github');
                        const prNumber = context.payload.pull_request.number;
                        const newCommentBody = `Test report:\n\nhttps://lsdaf.github.io/lsdaf_client/reports/report_${context.sha}/\n\nYou may need to wait for the github page to be deployed. Check the status of the deployment at https://github.com/LSDAF/lsdaf_client/actions/workflows/pages/pages-build-deployment`;
                        
                        // Fetch existing comments
                        const { data: comments } = await github.rest.issues.listComments({
                          ...context.repo,
                          issue_number: prNumber,
                        });
                        
                        // Check if the comment already exists
                        const existingComment = comments.find(comment => comment.body.includes('https://lsdaf.github.io/lsdaf_client/reports/report_'));
                        
                        if (existingComment) {
                          // Update the existing comment
                          await github.rest.issues.updateComment({
                            ...context.repo,
                            comment_id: existingComment.id,
                            body: newCommentBody,
                          });
                        } else {
                          // Create a new comment
                          await github.rest.issues.createComment({
                            ...context.repo,
                            issue_number: prNumber,
                            body: newCommentBody,
                          });
                        }